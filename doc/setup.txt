notes and stuff:

    # WARNING:tensorflow:Method (on_train_batch_end) is slow compared to the batch update (0.325404). Check your callbacks.
    # maybe something with TensorBoard callback, as the other ones get called at epoch end, not batch end

    # https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/LearningRateScheduler





cd ~/Documents/ai/phase02
virtualenv --system-site-packages -p python ./venv
source ./venv/bin/activate


[MANDATORY]
export PROJECT_ROOT=/data/ai/phase02/corvidae
export PROJECT_ROOT=/home/maarten.schermer/data/corivdae

[OPTIONAL]
export DWCA_FILE_PATH=/path/to/occurrences.txt (defaults to "dwca/Occurrence.txt")
export CLASS_IMAGE_MINIMUM=<n>  (defaults to 2)

[other defaults]
DwCA-file must be utf-8-sig
relevant DwCA-column headers: {'id': 'catalogNumber', 'taxon': 'scientificName', 'images': 'associatedMedia'}
associatedMedia: multi images concatenated by |


[FOLDERS] must be created manually (for now --> make a project_setup.py)


PROJECT_ROOT/
  ├── dwca/
  │    ├── nba_query.json
  │    └── Occurrence.txt
  │
  ├── lists/
  │    ├── classes.json
  │    ├── classes.csv
  │    ├── downloaded_images.csv
  │    └── images.csv
  │
  ├── log/
  │    └── general.log
  │
  └── images/
       ├── <subdir a>
       │    ├── image-1.jpg
       │    ├── image-2.jpg
       │    ├── ...
       │    └── image-n.jpg
       │
       └── <subdir b>
       └── ...
       └── <subdir n>


DwCA reader
  python dwca_reader.py
  in:
    PROJECT_ROOT *
    DWCA_FILE_PATH [$PROJECT_ROOT/dwca/Occurrence.txt]
    CLASS_IMAGE_MINIMUM [2]
    DwCA-headers * (catalogNumber,scientificName,associatedMedia)
  out:
    $PROJECT_ROOT/lists/classes.csv   (classname, image count)
    $PROJECT_ROOT/lists/images.csv    (classname, image URL)

    (general lists, these get copied to model dirs later)


Image Downloader
  python image_downloader.py
  in:
    PROJECT_ROOT *
    IMAGE_URL_TO_NAME [basename p.path]
        example: {'expression': '/file/id/|/format/[a-z]*', 'replace': '', 'postfix': '.jpg'}
    IMAGE_LIST_FILE [$PROJECT_ROOT/lists/images.csv]
      classes.csv
  out:
    downloaded images [$PROJECT_ROOT/images/<subdirs>] subdirs have random name, max 1000 images per subdir
    $PROJECT_ROOT/lists/downloaded_images.csv

  (default skips locally existing images, yet always (re)writes downloaded_images.csv, so also run when you've only changed the class minimum)


ModelTrainer
  TODO: implement Test split
  TODO: image max is now in dwca downloader, should be configurable in trainer


# scripts/generate_lists.py
# given a root folder containing subfolders w/ images per class, this script generates
# the two csv files required for model_trainer.py, downloaded_images.csv and classes.csv


have .env-file:
PROJECT_ROOT=/data/sylviidae
CLASS_IMAGE_MINIMUM=100
#CLASS_IMAGE_MAXIMUM=1000
IMAGE_URL_TO_NAME={"expression": "/file/id/|/format/[a-z]*", "replace": "", "postfix": ".jpg"}
# DEBUG=1



sudo docker-compose run tensorflow /code/project_prepare.py
sudo docker-compose run tensorflow /code/dwca_reader.py
sudo docker-compose run tensorflow /code/image_downloader.py
sudo docker-compose run tensorflow /code/model_trainer.py
sudo docker-compose run tensorflow /code/model_analysis.py --load_model xyz
sudo docker-compose run tensorflow /code/model_compare.py [--cleanup --delete]
sudo docker-compose run tensorflow /code/model_report.py --load_model xyz
sudo docker-compose run tensorflow /code/check_show.py --load_model xyz

sudo docker-compose run tensorflow /code/check_images.py --path



sudo docker-compose run tensorflow /code/model_trainer.py --alt_class_list classes-refcoll.csv --alt_image_list downloaded_images-refcoll.csv


sudo docker-compose run tensorflow /code/image_downloader.py \
    --override_image_list       /data/museum/naturalis/lists/sheet7_images.csv \
    --override_download_folder  /data/museum/naturalis/sheet7_images/ \
    --override_output_file      /data/museum/naturalis/lists/sheet7_downloaded_images.csv



sudo docker-compose run tensorflow /code/image_downloader.py \
    --override_image_list       /data/museum/naturalis/lists/sheet7_images.csv \
    --override_download_folder  /data/museum/naturalis/sheet7_images/ \
    --override_output_file      /data/museum/naturalis/lists/sheet7_downloaded_images.csv





# curl -XPOST  -F "image=@ZMA.INS.1279115_1.jpg" http://0.0.0.0:8090/identify

# .env
# API_MODEL_NAME=20200804-142255
# API_LOGFILE_PATH=/log/general.log
# API_DEBUG=1
# API_FLASK_DEBUG=0 (avoid)





python ../code/batch_api_call.py --image_list /data/maarten.schermer/data/museum/naturalis/lists/sheet7_downloaded_images.csv --image_folder /data/maarten.schermer/data/museum/naturalis/sheet7_images/ --api_url http://0.0.0.0:8090/identify

